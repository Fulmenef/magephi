##################################################
#
# Run the application to install a Magento on each new branch
#
##################################################

name: Continuous integration

on:
  push:
    branches:
      - "**"

env:
  MAGENTO_DIRECTORY: ./tmp/magento

jobs:
  magento:
    name: Test application on Magento
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      max-parallel: 2
      matrix:
        php-version:
          - "8.1"
          - "8.2"

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP with composer v2
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer:v2

      - name: Install system requirements
        run: |
          chmod +x bin/magephi
          sudo ln -s "$PWD/bin/magephi" "/usr/local/bin/magephi"

      - name: Initialize Magento 2 project directory
        run: mkdir -p ${{env.MAGENTO_DIRECTORY}}

      - name: Cache Magento application
        id: cache-magento
        uses: actions/cache@v3
        with:
          path: ${{env.MAGENTO_DIRECTORY}}
          key: ${{ runner.OS }}-build-${{ hashFiles('**/magephi.phar.asc') }}-magento-app

      - name: Regenerate files after cache restore
        if: steps.cache-magento.outputs.cache-hit == 'true'
        run: |
          rm -rf generated
          composer dumpautoload
        working-directory: ${{env.MAGENTO_DIRECTORY}}

      - name: Create a Magento Open Source project
        if: steps.cache-magento.outputs.cache-hit != 'true'
        run: composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition ${{env.MAGENTO_DIRECTORY}} --ignore-platform-reqs --no-install --no-dev
        env:
          COMPOSER_AUTH: ${{secrets.COMPOSER_AUTH}}

      - name: Install the Docker environment through Composer
        if: steps.cache-magento.outputs.cache-hit != 'true'
        run: composer require emakinafr/docker-magento2 --dev --prefer-dist --ignore-platform-reqs --no-progress -d ${{env.MAGENTO_DIRECTORY}}
        env:
          COMPOSER_AUTH: ${{secrets.COMPOSER_AUTH}}
          COMPOSER_MEMORY_LIMIT: 4G

      - name: Reduces the size of the Magento directory
        if: steps.cache-magento.outputs.cache-hit != 'true'
        run: rm -rf update
        working-directory: ${{env.MAGENTO_DIRECTORY}}

      - name: Install Magento
        run: magephi install --no-interaction -v
        working-directory: ${{env.MAGENTO_DIRECTORY}}

      - name: Check status
        run: magephi status
        working-directory: ${{env.MAGENTO_DIRECTORY}}

      - name: Try accessing the setup page
        run: curl --insecure --location --resolve "www.magento.localhost:443:127.0.0.1" https://www.magento.localhost/setup/

      - name: Stop containers
        run: magephi stop
        working-directory: ${{env.MAGENTO_DIRECTORY}}

      - name: Uninstall project
        run: yes | magephi uninstall -v
        working-directory: ${{env.MAGENTO_DIRECTORY}}
